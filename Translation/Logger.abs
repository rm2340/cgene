module Logger;
export Logger, CellResourcesLogger, Info, CellResourcesInfo;
import * from Cell;

interface Logger {
    Unit run();
}


class CellResourcesLogger([Final] Cell cell) implements Logger {

    Unit run() {
        //this.log();
    }

    Unit log() {
        while(True) {
            Time t = now();
            Int mrna = await cell!getQuantMrna();
            Int prot = await cell!getQuantProtein();
            Int ribo = await cell!getQuantRibosome();
            println("QUANT " + toString(t) + " mRNA " + toString(mrna) + " Protein " + toString(prot) + " Ribosomes " + toString(ribo));
            duration(1/100, 1/100); // log interval - adjust as needed
        }
    }

}

interface Info {
    [HTTPCallable] List<Int> stats();
}

class CellResourcesInfo(Cell cell) implements Info {

    List<Int> stats() {
        Int ribo = await cell!getQuantRibosome();
        Int mrna = await cell!getQuantMrna();
        Int prot = await cell!getQuantProtein();

        return list[ribo, mrna, prot];
    }
}
