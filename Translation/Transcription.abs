/* This very abstractly simulates transcription,
 * by generating random mRNA strands.
 * Corresponds to reaction: 0 -> mRNA (constant rate)
 */
module Transcription;
export Transcription;
import * from Mrna;
import * from Cell;


interface Transcription {
    Unit run();
    Mrna genMRNA();
}

class Transcription(Cell cell, Int rate) implements Transcription {

    Unit run() {
        while(True) {
            Mrna mrna = this.genMRNA();
            await cell!addMRNA(mrna);
            duration(1/rate, 1/rate);
        }
    }

    Mrna genMRNA() {
        // Start list with a start codon
		List<Nucleotide> codon = list[A, U, G];
		List<Nucleotide> mrna = codon;

		while (! stop(codon)) {
		    // Add random codon to mrna strand
		    codon = list[nuc(), nuc(), nuc()];
		    mrna = concatenate(mrna, codon);
		}
        return new Mrna(mrna);

        //println(toString(mrna));
    }

}

