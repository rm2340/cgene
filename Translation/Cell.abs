module Translation;
export Cell;
import * from Transcription;
import * from Ribosome;
import * from Protein;

interface Cell {
    Unit addMRNA(Mrna mrna);
    Unit addRibosome(Ribosome ribo);
    Mrna obtainMrna();
}

class Cell implements Cell {
    List<Mrna> mrnaStrands = set[];
    Set<Ribosome> ribosomes = set[];
    Set<Protein> proteins = set[];
    
    Unit addMRNA(Mrna mrna) {
        insertElement(mrnaStrands, mrna);
    }
    
    Unit addRibosome(Ribosome ribo) {
        insertElement(ribosomes, ribo);
    }
    
    // Randomly return one of the mRNA strands for decoding 
    Mrna obtainMrna() {
        Int n = random(length(mrnaStrands));
        return nth(mrnaStrands, n);
    }
}


/* Main block */

{
    Cell cell = new Cell();

    // populate cell with mRNA strands
    Transcription ts = new Transcription();
    
    Int i = 0;
    while (i < 100) {
        Mrna mrna = ts.genMRNA();
        cell.addMRNA(mrna);
        i = i + 1;
    }

    // populate cell with ribosomes
    i = 0;
    while (i < 100) {
        Ribosome ribo = new Ribosome(cell);
        cell.addRibosome(ribo);
        i = i + 1;
    }


}