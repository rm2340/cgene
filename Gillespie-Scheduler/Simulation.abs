module Simulation;
import * from ABS.Scheduler;
import * from Reaction;
import * from Cell;


def Process scheduler1(List<Process> queue) = nth(queue, random(length(queue)));

/*
TODO: Implement scheduler that follows Gillespie algorithm
Problem: currently schedulers have no access to object fields

But we can still implement a function that takes the necessary information via arguments.
Later we can change this function to work as a scheduler function.


   def Process gscheduler(List<Process> queue) =


*/


// ******************** Main block ******************************
{
   
    // create substances
    Substance mrna = Substance("mRNA");
    Substance prot = Substance("Protein");

    // create cell substrate
    //[Scheduler: scheduler1(queue)] Cell cell = new Cell(map[Pair(mrna,100), Pair(prot,0)]);

    Cell cell = new Cell(map[Pair(mrna,100), Pair(prot,0)]);
    
       
    // add reactions to cell
    cell.addReaction("Translation", cell, 1, map[Pair(mrna,1)], map[Pair(mrna,1), Pair(prot,1)]);
    cell.addReaction("Transcription", cell, 1, map[], map[Pair(mrna,1)]);
    cell.addReaction("mRNA Degradation", cell, 1, map[Pair(mrna,1)], map[]);
    cell.addReaction("Protein Degradation", cell, 1, map[Pair(prot,1)], map[]);
    //If all reactions are defined, we can execute our model. 
    //Note: using the run() method does not work, since we need to add Reactions, before the Cell-class is supposed to start.
    
    cell.exec();
}
