module Simulation;
import * from ABS.Scheduler;
import * from Reaction;
import * from Cell;


def Process scheduler1(List<Process> queue) = nth(queue, random(length(queue)));

/*
TODO: Implement scheduler that follows Gillespie algorithm

   def Process gscheduler(List<Process> queue) =


*/


// ******************** Main block ******************************
{

    // create substances
    Substance mrna = Substance("mRNA");
    Substance prot = Substance("Protein");

    // create cell substrate
    [Scheduler: scheduler1(queue)] Cell cell = new Cell(map[Pair(mrna,100), Pair(prot,0)]);

    // add reactions to cell
    await cell!addReaction("Translation", cell, 1, map[Pair(mrna,1)], map[Pair(mrna,1), Pair(prot,1)]);
    await cell!addReaction("Transcription", cell, 1, map[], map[Pair(mrna,1)]);
    await cell!addReaction("mRNA Degradation", cell, 1, map[Pair(mrna,1)], map[]);
    await cell!addReaction("Protein Degradation", cell, 1, map[Pair(prot,1)], map[]);


}
